{"version":3,"sources":["components/Header/Header.jsx","components/Todo/Todo.jsx","components/TodoList/TodoList.jsx","components/TodosFilter/TodosFilter.jsx","components/ToggleAll/ToggleAll.jsx","App.js","index.js"],"names":["Header","onAddTodo","useState","value","setValue","className","onSubmit","event","newTodo","id","Date","title","completed","type","placeholder","onChange","target","Todo","todo","onCheckedTodos","onDelete","onEditTodo","isEding","setIsEding","classNames","editing","checked","onDoubleClick","onClick","onKeyPress","key","editTodo","onKeyDown","TodoList","todos","map","TodosFilter","checkCompeted","onFilter","handleClearCompleted","href","name","e","ToggleAll","onToggleTodos","isNotCompeted","isChecked","setIsChecked","useEffect","htmlFor","App","setTodos","render","setRender","filter","length","currentCompleted","currentTodo","checkedTodos","field","filteredTodo","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8370e869.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Header = ({ onAddTodo }) => {\n  const [value, setValue] = useState('');\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    if (value === '') {\n      return;\n    }\n\n    const newTodo = {\n      id: `${+new Date()}`,\n      title: value,\n      completed: false,\n    };\n\n    onAddTodo(newTodo);\n    setValue('');\n  };\n\n  return (\n    <header className=\"header\">\n      <h1>todos</h1>\n\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={value}\n          onChange={handleChange}\n        />\n      </form>\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  onAddTodo: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\n\nexport const Todo = ({ todo, onCheckedTodos, onDelete, onEditTodo }) => {\n  const [value, setValue] = useState(todo.title);\n  const [isEding, setIsEding] = useState(false);\n\n  const toggleTodo = () => {\n    onCheckedTodos({\n      ...todo,\n      completed: !todo.completed,\n    });\n  };\n\n  const changeTodo = (event) => {\n    setValue(event.target.value);\n  };\n\n  const handelEdit = (event) => {\n    if (event.key === 'Enter') {\n      if (!value) {\n        setValue(todo.title);\n        setIsEding(false);\n\n        return;\n      }\n\n      const editTodo = {\n        ...todo,\n        title: value,\n      };\n\n      onEditTodo(editTodo);\n\n      setIsEding(false);\n    }\n  };\n\n  const addNotChange = (event) => {\n    if (event.key === 'Escape') {\n      setValue(todo.title);\n      setIsEding(false);\n    }\n  };\n\n  return (\n    <li className={classNames({\n      editing: isEding,\n    })}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={todo.completed}\n          onChange={toggleTodo}\n        />\n        <label\n          onDoubleClick={() => setIsEding(true)}\n        >\n          {todo.title}\n        </label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => onDelete(todo.id)}\n        />\n      </div>\n      <input\n        type=\"text\"\n        className=\"edit\"\n        value={value}\n        onChange={changeTodo}\n        onKeyPress={handelEdit}\n        onKeyDown={addNotChange}\n      />\n    </li>\n  );\n};\n\nTodo.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n  onCheckedTodos: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onEditTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Todo } from '../Todo/Todo';\n\nexport function TodoList({ todos, onCheckedTodos, onDelete, onEditTodo }) {\n  return (\n    <ul className=\"todo-list\">\n      {todos.map(todo => (\n        <Todo\n          key={todo.id}\n          todo={todo}\n          onCheckedTodos={onCheckedTodos}\n          onDelete={onDelete}\n          onEditTodo={onEditTodo}\n        />\n      ))}\n    </ul>\n  );\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }),\n  ).isRequired,\n  onCheckedTodos: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onEditTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function TodosFilter({\n  checkCompeted,\n  onFilter,\n  handleClearCompleted,\n}) {\n  return (\n    <>\n      <span className=\"todo-count\">\n        {`${checkCompeted} items left`}\n      </span>\n\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"#/\"\n            name=\"All\"\n            className=\"selected\"\n            onClick={e => onFilter(e.target.name)}\n          >\n            All\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/active\"\n            name=\"active\"\n            onClick={e => onFilter(e.target.name)}\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            name=\"completed\"\n            href=\"#/completed\"\n            onClick={e => onFilter(e.target.name)}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        onClick={handleClearCompleted}\n      >\n        Clear completed\n      </button>\n    </>\n  );\n}\n\nTodosFilter.propTypes = {\n  checkCompeted: PropTypes.number.isRequired,\n  onFilter: PropTypes.func.isRequired,\n  handleClearCompleted: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\n\nexport const ToggleAll = ({ checkCompeted, onToggleTodos }) => {\n  const isNotCompeted = !checkCompeted;\n  const [isChecked, setIsChecked] = useState(false);\n\n  useEffect(() => {\n    setIsChecked(isNotCompeted);\n  }, [isNotCompeted]);\n\n  const handleToggle = () => {\n    setIsChecked(!isChecked);\n    onToggleTodos(!isChecked);\n  };\n\n  return (\n    <>\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        onChange={handleToggle}\n        checked={isChecked}\n      />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n    </>\n  );\n};\n\nToggleAll.propTypes = {\n  checkCompeted: PropTypes.number.isRequired,\n  onToggleTodos: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport { Header } from './components/Header/Header';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { TodosFilter } from './components/TodosFilter/TodosFilter';\nimport { ToggleAll } from './components/ToggleAll/ToggleAll';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [render, setRender] = useState([]);\n\n  useEffect(() => {\n    setRender(todos);\n  }, [todos]);\n\n  const addTodo = (todo) => {\n    setTodos([...todos, todo]);\n  };\n\n  const onDelete = (id) => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  const checkCompeted = todos.filter(\n    todo => !todo.completed,\n  ).length;\n\n  const onToggleTodos = (currentCompleted) => {\n    setTodos(todos.map(todo => ({\n      ...todo,\n      completed: currentCompleted,\n    })));\n  };\n\n  const handleClearCompleted = () => {\n    setTodos(todos.filter(todo => !todo.completed));\n  };\n\n  const onCheckedTodos = (currentTodo) => {\n    const checkedTodos = todos.map(\n      todo => ((todo.id === currentTodo.id) ? currentTodo : todo),\n    );\n\n    setTodos(checkedTodos);\n  };\n\n  const onFilter = (field) => {\n    let filteredTodo;\n\n    switch (field) {\n      case 'active':\n        filteredTodo = todos.filter(todo => !todo.completed);\n        break;\n      case 'completed':\n        filteredTodo = todos.filter(todo => todo.completed);\n        break;\n      default:\n        filteredTodo = [...todos];\n    }\n\n    setRender(filteredTodo);\n  };\n\n  const onEditTodo = (editTodo) => {\n    setTodos(todos.map(todo => (\n      todo.id === editTodo.id ? editTodo : todo\n    )));\n  };\n\n  return (\n    <section className=\"todoapp\">\n      <Header onAddTodo={addTodo} />\n      <section className=\"main\">\n        <ToggleAll\n          checkCompeted={checkCompeted}\n          onToggleTodos={onToggleTodos}\n        />\n        <TodoList\n          todos={render}\n          onCheckedTodos={onCheckedTodos}\n          onDelete={onDelete}\n          onEditTodo={onEditTodo}\n        />\n      </section>\n      {todos.length > 0\n      && (\n        <footer className=\"footer\">\n          <TodosFilter\n            checkCompeted={checkCompeted}\n            onFilter={onFilter}\n            handleClearCompleted={handleClearCompleted}\n          />\n        </footer>\n      )\n      }\n    </section>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './styles/index.css';\r\nimport './styles/todo-list.css';\r\nimport './styles/filters.css';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}